package ${package.Controller};

import com.baomidou.mybatisplus.core.metadata.IPage;
import com.pig4cloud.pig.common.core.util.R;
import ${cfg.apiPackage}.model.form.${entity}QueryForm;
import ${cfg.apiPackage}.model.form.${entity}Form;
import ${cfg.apiPackage}.model.vo.${entity}Vo;
import io.swagger.annotations.*;
import lombok.extern.slf4j.Slf4j;
import lombok.RequiredArgsConstructor;
import org.springframework.web.bind.annotation.*;
import org.springframework.beans.factory.annotation.Autowired;
import javax.validation.Valid;
import javax.validation.constraints.NotNull;
import java.util.List;
import ${package.Service}.${table.serviceName};


/**
 * @Author : ${author}
 * @Date : Create in ${date}
 * @Description :   ${entity}控制器实现类
 * @Modified :
 */
@Api(tags = "$!{table.comment}")
@Slf4j
@RequiredArgsConstructor
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
#if(${cfg.isPublic})
public class ${table.controllerName} implements ${entity}Client {
#else
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
public class ${table.controllerName} {
#end

#end
    private final ${table.serviceName}  ${table.entityPath}Service;

    @PostMapping("/save")
    @ApiOperation(value = "新增")
    public R<Long> save(@Valid @RequestBody ${entity}Form saveForm) {
        return R.ok(${table.entityPath}Service.saveForm(saveForm));
    }

    @PostMapping("/update/{id}")
    @ApiOperation(value = "修改")
    @ApiImplicitParam(paramType = "path", name = "id", value = "id", required = true, type = "long", dataTypeClass = Long.class)
    public R<Long> update(@PathVariable("id") @Valid @NotNull Long id, @Valid @RequestBody ${entity}Form saveForm) {
        return R.ok(${table.entityPath}Service.updateForm(id, saveForm));
    }

    @ApiOperation(value = "删除")
    @PostMapping("/delete/{id}")
    @ApiImplicitParam(paramType = "path", name = "id", value = "id", required = true, type = "long", dataTypeClass = Long.class)
    public R<Boolean> delete(@PathVariable("id") @Valid @NotNull Long id) {
        return R.ok(${table.entityPath}Service.removeById(id));
    }

    @ApiOperation(value = "获取")
    @GetMapping("/get/{id}")
    @ApiImplicitParam(paramType = "path", name = "id", value = "id", required = true, type = "long", dataTypeClass = Long.class)
    public R<${entity}Vo> get(@PathVariable("id") @Valid @NotNull Long id) {
        return R.ok(${table.entityPath}Service.queryById(id));
    }

    @ApiOperation(value = "分页查询")
    @PostMapping("/page")
    public R<IPage<${entity}Vo>> page(@RequestBody @Valid ${entity}QueryForm queryForm) {
        return R.ok(${table.entityPath}Service.selectPage(queryForm));
    }

}



